【啊哈C语言自学】

【第一章】

【第1节】（略）

【第2节】（让计算机说话）

【000――C语言基本框架】

#include <stdio.h>//头文件；函数库，stdio (standard input & output) 标准输入输出
#include <stdlib.h>//头文件；函数库，stdlib (standard library) 标准库
int main()//main主函数；int main()整数类型主函数，一个C程序只能有一个全局main函数
{	
	return 0;//结束运行；返回值
}

【001――hello world】

#include <stdio.h>	
#include <windows.h>//vs下调用Sleep函数需要的头文件
int main()
{
	printf("hello world");//pringf("")程序输出内容
	Sleep(2000);//暂停2000毫秒
	return 0;
}

【002――换行命令\n】

#include <stdio.h>	
#include <windows.h>
int main()
{
	printf("hello\nworld");//换行符\n
	Sleep(2000);
	return 0;
}

【003――练习】

练习1；让计算机显示如下：
*
**
***

#include <stdio.h>	
#include <windows.h>
int main()
{
	printf("*\n**\n***");
	Sleep(2000);
	return 0;
}

练习2；让计算机显示如下：
  *  
 * * 
*   *
 * * 
  *  

#include <stdio.h>	
#include <windows.h>
int main()
{
	printf("  *  \n * * \n*   *\n * * \n  *  ");
	Sleep(2000);
	return 0;
}

练习3；让计算机显示如下：

               *
             * 
           *  
*       *   
  *   *    
    *     

#include <stdio.h>	
#include <windows.h>
int main()
{
	printf("       *\n      * \n     *  \n*   *   \n * *    \n  *     ");
	Sleep(2000);
	return 0;
}

练习4；让计算机显示中文“你好”：

#include <stdio.h>	
#include <windows.h>
int main()
{
	printf("你好");
	Sleep(2000);
	return 0;
}

【第3节】（让显示的字带颜色）//系统默认黑底白字

【004――让字带上颜色】

#include <stdio.h>	
#include <windows.h>
int main()
{
	printf("你好");
	system("color 5");//5文字紫色;
	Sleep(2000);
	return 0;
}

【005――改变背景和文字颜色】

#include <stdio.h>	
#include <windows.h>
int main()
{
	system("color f2");//f5白底绿字;(16进制)
	printf("你好");
	Sleep(2000);
	return 0;
}

【第4节】（数学运算）

【006――加法计算1+2】

#include <stdio.h>
#include <windows.h>
int main()
{
	int a,b,c;//int(integer)取整函数；设置a;b;c;
	a=1;//赋值a为1；“=”号编程中为赋值符号;等于号表示为“==”
	b=2;//赋值b为2；
	c=a+b;//赋值c为a+b;
	printf("%d",c);//输出结果；%d为输出实数，对应函数int;输出对象为c
	Sleep(2000);
	return 0;
}

【第5节】（变量：存储数据的小房子）
[术语] [变量类型] [变量名称] [变量名称]
代码 	int a,b; 

【007――最后输出啥】

#include <stdio.h>	
#include <windows.h>
int main()
{
	int a;
	a=1;
	a=2;
	printf("%d",a);//输出2；a=1被a=2覆盖运行；始终存放最后一次的值
	Sleep(2000);
	return 0;
}


#include <stdio.h>	
#include <windows.h>
int main()
{
	int a;
	a=7;
	a=a+1;
	printf("%d",a);//输出8；先a=7;后运行a=a+1,+级别优先于=；先计算后赋值给a
	Sleep(2000);
	return 0;
}


【008――练习】

练习1；计算1.2+2.3+3.4+4.5

#include <stdio.h>	
#include <windows.h>
int main()
{
	float a,b,c,d,e;
	a=1.2;
	b=2.3;
	c=3.4;
	d=4.5;
	e=a+b+c+d;
	printf("%f",e);
	Sleep(2000);
	return 0;
}

练习2：计算1.1*100

#include <stdio.h>	
#include <windows.h>
int main()
{
	float a;
	a=1.1;
	int b,c;
	b=100;
	c=a*b;
	printf("%d",c);
	Sleep(2000);
	return 0;
}

练习3：计算10.1*(10*10)

#include <stdio.h>	
#include <windows.h>
int main()
{
	float a;
	a=10.1;
	int b,c,d;
	b=10;
	c=b*b;
	d=a*c;
	printf("%d",d);
	Sleep(2000);
	return 0;
}

【第6节】（数据输出）

【009――输出1+2=3这样的运算过程】
#include <stdio.h>	
#include <windows.h>
int main()
{
	int a,b,c;
	a=1;
	b=2;
	c=a+b;
	printf("%d+%d=%d",a,b,c);//算术等式输出
	Sleep(2000);
	return 0;
}

【010――分别计算10-5和10+5并分2行显示】

#include <stdio.h>
#include <windows.h>
int main()
{
	int a,b;
	a=10;
	b=5;
	printf("%d\n",a-b);//只显示运算结果；换行；
	printf("%d",a+b);//只显示运算结果
	Sleep(2000);
	return 0;
}

#include <stdio.h>	
#include <windows.h>
int main()
{
	int a,b;
	a=10;
	b=5;
	printf("%d-%d=%d\n",a,b,a-b);//显示算术等式和结果；换行
	printf("%d+%d=%d",a,b,a+b);//显示算术等式和结果；
	Sleep(2000);
	return 0;
}

#include <stdio.h>	
#include <windows.h>
int main()
{
	int a,b,c;
	a=10;
	b=5;
	c=a-b;
	printf("%d\n",c);
	c=a+b;
	printf("%d",c);
	Sleep(2000);
	return 0;
}

#include <stdio.h>
#include <windows.h>
int main()
{
	int a, b,c,d;
	a = 10;
	b = 5;
	c = a + b;
	d = a - b;
	printf("%d+%d=%d\n%d-%d=%d",a,b,c,a,b,d);	
	Sleep(2000);
	return 0;
}



【011――输出指定两个数的和差积商例9与3】

#include <stdio.h>	
#include <windows.h>
int main()
{
	int a,b;
	a=9;
	b=3;
	printf("%d+%d=%d\n",a,b,a+b);
	printf("%d-%d=%d\n",a,b,a-b);
	printf("%d*%d=%d\n",a,b,a*b);
	printf("%d/%d=%d",a,b,a/b);
	Sleep(2000);
	return 0;
}

【第7节】（获取键盘输入数据scanf_s）

【012――从键盘读入2个数字并求和】

#include <stdio.h>	
#include <windows.h>
int main()
{
	int a, b, c;	
	scanf_s("%d %d", &a, &b);//给变量赋值，scanf_s读取键盘输入;&取址符
	c = a + b;//a和b赋值前不可预算变量c,故此行在scanf_s读入ab值之后
	printf("%d+%d=%d", a, b, c);
	Sleep(2000);
	return 0;
}

【013――带提示的加法计算器】

#include <stdio.h>	
#include <windows.h>
int main()
{
	int a, b, c;
	printf("警告！这是一个会卖萌的加法计算器！(ノω<。)ノ))☆.。\n");
	printf("--------------------------------------------------\n");
	printf("请输入第1个加数(输入完毕按请按Enter键确认)\n");
	scanf_s("%d", &a);
	printf("请输入第2个加数(输入完毕按请按Enter键确认)\n");
	scanf_s("%d", &b);
	c = a + b;
	printf("铛铛铛~本宝宝要开始计算啦(ノω<。)ノ))☆.。\n");
	printf("计算结果为：%d+%d=%d\n", a, b, c);
	printf("(★ ω ★)本宝宝是不是很腻害！");
	Sleep(5000);
	return 0;
}


【014――练习输入两个数；输出他们的和差积商】

#include <stdio.h>	
#include <windows.h>
int main()
{
	int a, b, c;	
	scanf_s("%d %d", &a, &b);
	c = a + b;
	printf("%d+%d=%d\n", a, b, c);
	c = a - b;
	printf("%d-%d=%d\n", a, b, c);
	c = a * b;
	printf("%d*%d=%d\n", a, b, c);
	c = a / b;
	printf("%d/%d=%d", a, b, c);//整数除法结果只留整数部分

	Sleep(2000);
	return 0;
}

【第8节】（几个最常用的数据类型）
int	――占位符%d	(用来存放整数)
float	――占位符%f	(用来存放浮点数)
double	――占位符%lf	(用来存放极大和极小的浮点数)
char	――占位符%c	(用来存放字符)

【015――float与double区别】

#include <stdio.h>	
int main()
{
	float a;
	a=3.1415926535897932;//	a=3.1415926535897932
	printf("%.15f",a);//	输出结果a=3.141592741012573;".15"表示保留小数点后15位
	getchar();//效果类似于system("pause");回车后执行后续代码
	return 0;
}

#include <stdio.h>	
int main()
{
	double a;
	a=3.1415926535897932;//	a=3.1415926535897932
	printf("%.15lf",a);//输出结果a=3.141592653589793
	getchar();
	return 0;
}

【016――char】

#include <stdio.h>	
int main()
{
	char a;
	scanf_s("%c",&a);//如果输入为多个字符只输出第一个字符
	printf("你输入的符号为%c\n",a);
	system("pause");
	return 0;
}

【017――练习：输入一个字符；输出该字符后面一位】

#include <stdio.h>	
int main()
{
	char a;
	scanf_s("%c",&a);
	printf("你输入的符号后一位为%c\n",a+1);
	system("pause");
	return 0;
}

【第9节】（计算其实很简单）

【018――直接计算】

#include <stdio.h>	
int main()
{
	printf("%d",4+(6-3)*7);
	getchar();
	return 0;
}

【第10节】（交换数据）

【019――交换变量初始值；例输入a=5、b=6；输出a=6、b=5；实现交换】

Mission A：实现输入即输出：

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b;
	scanf_s("%d %d",&a,&b);//获取变量值a,b的输入；a=&a、b=&b
	printf("%d %d",a,b);//输出获取的变量值；a=&a、b=&b
	Sleep(5000);
	return 0;
}

MissionB：尝试交换1：

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b;
	scanf_s("%d %d",&a,&b);//获取变量值a,b的输入；a=&a、b=&b
	a=b;//a=&b
	b=a;//b=a=&b
	printf("%d %d",a,b);//输出变量值a=&b;b=&b；a被替换覆盖交换失败
	Sleep(5000);
	return 0;
}

MissionC：引入临时变量t：

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,t;
	scanf_s("%d %d",&a,&b);//获取变量值a,b的输入；a=&a、b=&b
	t=a;//t=&a
	a=b;//a=&b
	b=t;//b=t=&a
	printf("%d %d",a,b);//输出变量值a=&b;b=t=&a；a交换成功
	Sleep(5000);
	return 0;
}

MissionE：不引入临时变量实现交换，尝试解析如何实现：

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b;
	scanf_s("%d %d",&a,&b);
	a=b-a;//①
	b=b-a;//②
	a=b+a;//③
	printf("%d %d",a,b);
	Sleep(5000);
	return 0;
}








解析：

已经定义a,b;并获取输入值&a;&b;
	a=b-a;//①
	b=b-a;//②
	a=b+a;//③
最终输出时a的赋值①被③覆盖；类似于
int a,b,c;
a=0;
b=1;
a=2;
则最后输出(a,b)为(2,1)一个道理；


①a=b-a//a有赋值动作；	a=(&b-&a);

②b=b-a//b有赋值动作；	b=&b-a;	&b-a中有不确定变量a；查询到
	①中a=(&b-&a)
	则&b-a=&b-(&b-&a)=&b-&b+&a=&a;最后【b=&a】

③a=b+a//a有赋值动作；a={b+a}；{b+a}中有不确定变量b,a;查询到
	②中b=&a；
	①中a=(&b-&a)
	则a={b+a}={&a+(&b-&a)}={&a+&b-&a}=&b;最后【a=&b】

printf("")输出(a,b)=(&b,&a)，数据交换完成；


【第11节】（让代码变得更美）
“//”注释到本行末尾；“/*……*/”注释中间部分；tab键调整代码格式）

【020――代码格式美化】

#include <stdio.h>	
#include<windows.h>
int main() { int a, b, c; scanf_s("%d %d", &a, &b);  c = a + b; printf("%d", c); Sleep(2000); return 0; }

以上代码可以编译执行无任何错误；但人看起来会比较吃力；
优化代码排列可以更容易让人理解代码内容；

#include <stdio.h>	
#include<windows.h>
int main()
{ 
	int a, b, c;
	scanf_s("%d %d", &a, &b); 
	c = a + b;
	printf("%d", c); 
	Sleep(2000); 
	return 0; 
}

【021――注释；告诉编码器从//直到本行末尾内容是无用的；仅作为备注方便理解】

#include <stdio.h>	
#include<windows.h>
int main()
{ 
	int a;
	a=1;//将变量a赋初始值
	printf("%d",a); 
	Sleep(2000); 
	return 0; 
}

【022――注释符另一用法：临时性删除，代码保留但不用不执行】

#include <stdio.h>	
#include<windows.h>
int main()
{ 
	int a;
	a=1;//将变量a赋初始值
	//printf("%d",a); （本行不执行；如果需要恢复执行只需要去掉注释符“//”即可）
	Sleep(2000); 
	return 0; 
}

【023――多行注释“/*……*/”；从/*开始直到*/结束都不执行，可跨行注释】

#include <stdio.h>	
#include<windows.h>
int main()
{ 
	int a;
	a=1;
	/*
	a=2;
	a=3;
	a=4;
	a=5;
	*/
	printf("%d",a); 
	Sleep(2000); 
	return 0; 
}

【024――代码简化】

单个变量：
	int a;
	a=1;
简化后：
	int a=1;


多个变量：
	int a,b,c;
	a=1;
	b=2;
	c=3;
简化后：
	int a=1,b=2,c=3;

浮点型和字符型类似：
	float a=1.2;
	char a='X';//给字符赋初始值时，字符两边加单引号‘ ’



【第二章】

【第1节】（判断大小）

【025――关系运算符】

==	等于//计算机语言中=表示赋值；==才表示相等；
>	大于
<	小于
>=	大于等于
<=	小于等于
！=	不等于


【第2节】（判断正负）

【026――如何判断一个整数为正数，如果是则显示yes】

算法：
	1、需要定义一个变量来存储这个数字；
	2、需要让计算机读取这个数；
	3、计算机运算来判断是否为正数；
	4、输出判断结果。
代码：

#include <stdio.h>	
#include<windows.h>
int main()
{ 
	int a;//定义一个变量整数a;
	scanf_s("%d",&a);//读取输入的整数；
	if(a>0)	printf("yes");//条件语句if()；括号内为关系表达式；
	Sleep(2000); 
	return 0; 
}

【027――练习；如果正数显示yes;负数或者0则显示no】

#include <stdio.h>	
#include<windows.h>
int main()
{ 
	int a;
	scanf_s("%d",&a);
	if(a>0)	printf("yes");
	if(a<=0)	printf("no");
	Sleep(2000); 
	return 0; 
}

【第3节】（判断奇偶）

【028――如何判断一个整数为偶数，如果是则显示yes不是则显示no】

算法：
	1、需要定义一个变量来存储这个数字；
	2、需要让计算机读取这个数；
	3、计算机运算来判断是否为偶数；
	4、输出判断结果。
代码：

#include <stdio.h>	
#include<windows.h>
int main()
{ 
	int a;
	scanf_s("%d",&a);
	if(a%2==0)	printf("yes");//求余数符号"%"
	if(a%2!=0)	printf("no");
	Sleep(2000); 
	return 0; 
}

【029――练习：如何判断一个数末尾是不是0】

#include <stdio.h>	
#include<windows.h>
int main()
{ 
	int a;
	scanf_s("%d",&a);
	if(a%10==0)	printf("yes");
	if(a%10!=0)	printf("no");
	Sleep(2000); 
	return 0; 
}

【第4节】（else语句：与if搭配；表示否则；除此以外）

【028――if-else语句用法】

if(条件)	语句；
else	语句；

条件为真的时候执行if后语句，条件为假的时候执行else后语句

#include <stdio.h>	
#include<windows.h>
int main()
{ 
	int a;
	scanf_s("%d",&a);
	if(a%2==0)	printf("yes");
	else		printf("no");
	Sleep(2000); 
	return 0; 
}

【029――练习：判断一个正整数是否为个位数（即1~9）】

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a;
	scanf_s("%d", &a);
	if (a>0&&a<10)	printf("yes");//&&逻辑与;并且;取交集;（用&也行，不懂位与符待研究）
	else		printf("no");
	Sleep(2000);
	return 0;
}

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a;
	scanf_s("%d", &a);
	if (a > 0) 
		{
		if (a<10)	printf("yes");
		else	printf("no");
		}
	else	printf("no");
	
	Sleep(2000);
	return 0;
}


【第5节】（比较两个数大小）

【030――比较两个数大小，并输出较大的那个数】

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,c;
	scanf_s("%d %d", &a,&b);
	if (a>b)	c=a;
	else	c=b;
	printf("%d",c);
	Sleep(2000);
	return 0;
}

【031――练习：判断两个正整数b为a的约数，输出判断】

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b;
	scanf_s("%d %d", &a,&b);
	if (b%a==0)	printf("yes");
	else		printf("no");
	Sleep(2000);
	return 0;
}

【第6节】（比较三个数大小）

【032――输入三个数；输出最大的那个值】

算法1：
	1、定义4个变量a,b,c,d；d为临时变量；
	2、先比较a与b，选出较大的赋值给d；
	3、再比较c与d，选出较大的赋值给d；
	4、输出最后变量值d；

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,c,d;
	scanf_s("%d %d %d", &a,&b,&c);

	if (a>b)	d=a;
	else	d=b;
	if(d<c)	d=c;//最后输出d,所以不需要考虑d>c的情况直接输出d;
	printf("%d",d);
	Sleep(2000);
	return 0;
}

算法2：（运用逻辑与&&、逻辑或||、逻辑非！）
	1、如果a>=b并且a>=c;	输出a；
	2、如果b>=a并且b>=c；	输出b；
	3、如果c>=a并且c>=b；	输出c；

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,c;
	scanf_s("%d %d %d", &a,&b,&c);
	if (a>=b&&a>=c)	printf("%d",a);
	if (b>=a&&b>=c)	printf("%d",b);
	if (c>=a&&c>=b)	printf("%d",c);
	Sleep(2000);
	return 0;
}

【033――练习】

练习1、输入三个整数；输出最小

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,c,d;
	scanf_s("%d %d %d", &a,&b,&c);

	if (a<b)	d=a;
	else	d=b;
	if(c<d)	d=c;
	printf("%d",d);
	Sleep(2000);
	return 0;
}

练习2、输入四个整数；输出最大

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,c,d,e;
	scanf_s("%d %d %d %d", &a,&b,&c,&d);

	if (a>b)	e=a;
	else	e=b;

	if(c>e)	e=c;
	if(d>e)	e=d;
	printf("%d",e);
	Sleep(2000);
	return 0;
}

练习3、判断一个年份是否闰年；

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a;
	scanf_s("%d", &a);
	if (a%4==0)	printf("yes");
	else		printf("no");
	Sleep(2000);
	return 0;
}

【第7节】（排序）

【034――将三个数从大到小排序】

算法一：穷举数列

	1、最直接的三个数的任意排列组合；
		a≥b≥c；
		a≥c≥b；
		b≥a≥c；
		b≥c≥a；
		c≥a≥b；
		c≥b≥a；
	2、转换成计算机语言即：
		如果a>=b并且b>=c；	则输出a b c
		如果a>=c并且c>=b；	则输出a c b
 		如果b>=a并且a>=c；	则输出b a c
		如果b>=c并且c>=a；	则输出b c a
		如果c>a=并且a>=b；	则输出c a b
		如果c>=b并且b>=a；	则输出c b a

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,c;
	scanf_s("%d %d %d", &a,&b,&c);
	if (a>=b&&b>=c)	printf("%d %d %d",a,b,c);
	if (a>=c&&c>=b)	printf("%d %d %d",a,c,b);
	if (b>=a&&a>=c)	printf("%d %d %d",b,a,c);
	if (b>=c&&c>=a)	printf("%d %d %d",b,c,a);
	if (c>=a&&a>=b)	printf("%d %d %d",c,a,b);
	if (c>=b&&b>=a)	printf("%d %d %d",c,b,a);	
	Sleep(2000);
	return 0;
}
		

算法2：交换法

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a, b, c, t;
	scanf_s("%d %d %d", &a, &b, &c);
	if (a<b) { t = a, a = b, b = t; }//确保a>=b;
	if (a<c) { t = a, a = c, c = t; }//确保a>=b并且a>=c;	
	if (b<c) { t = b, b = c, c = t; }//确保a>=b并且a>=c并且b>=c;
	printf("%d %d %d", a, b, c);//输出(a>=b>=c)
	Sleep(2000);
	return 0;
}

 
【035――输出a，a为奇数则输出它的后三位数，偶数则输出前三位数】

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a;
	scanf_s("%d", &a);
	if (a%2==0)	printf("%d %d %d",a-1,a-2,a-3);
	else 		printf("%d %d %d",a+1,a+2,a+3);
	Sleep(2000);
	return 0;
}

【036――练习：任意四个数按从小到大排列】

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,c,d,t;
	scanf_s("%d %d %d %d", &a,&b,&c,&d);
	if (a>b) { t = a, a = b, b = t; }
	if (a>c) { t = a, a = c,  c = t; }
	if (a>d) { t = a, a = d, d = t; }
	if (b>c) { t = b, b = c, c = t; }
	if (b>d) { t = b, b = d, d = t; }
	if (c>d) { t = c, c = d, d = t; }	
	printf("%d %d %d %d", a, b, c, d);
	Sleep(2000);
	return 0;
}

【第8节】（运算符总结）
+	加
-	减
*	乘
/	除
>	大于
<	小于
==	等于
>=	大于等于
<=	小于等于
!=	不等于
&&	与
||	或
!	非


【第9节】（真假表达式）

【037――关系表达式】

if(1>2)	printf("yes");//若表达式为真，输出yes(1>2不成立)
else	printf("no");//表达式不成立，输出no（输出no）

那么观察下面三例：

if(1)	printf("yes");
else	printf("no");

if(-5)	printf("yes");
else	printf("no");

if(0)	printf("yes");
else	printf("no");

测试后发现计算机只认为0是假的，其余都为真

第10节】（嵌套）

【038――if-else复合语句//嵌套】

例：三个数里面输出最大一位；

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,c;
	scanf_s("%d %d %d", &a,&b,&c);
	if (a>=b&&a>=c)	printf("%d",a);
	if (b>=a&&b>=c)	printf("%d",b);
	if (c>=a&&c>=b)	printf("%d",c);
	Sleep(2000);
	return 0;
}

改成嵌套语句：

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,c;
	scanf_s("%d %d %d", &a,&b,&c);
	if (a>=b)				//a>=b
	{
		if(a>=c)	{printf("%d",a);}	//a>=b&&a>=c
		else	{printf("%d",c);}	//c>a&&a>=b
	}
	else				//b>a
	{
		if(b>=c)	{printf("%d",b);}	//b>a&&b>=c
		else	{printf("%d",c);}	//c>b&&b>a
	}
	
	Sleep(2000);
	return 0;
}

简化后

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a,b,c;
	scanf_s("%d %d %d", &a,&b,&c);
	if (a>=b)
		if(a>=c)	{printf("%d",a);}
		else	{printf("%d",c);}
	else
		if(b>=c)	{printf("%d",b);}
		else	{printf("%d",c);}	
	Sleep(2000);
	return 0;
}


【第11节】（if-else语法总结）

if(表达式)	{语句}
else	{语句}

当表达式成立的时候，执行if后面{}中的内容；
表达式不成立的时候，执行else后面{}中的内容；
当{}内的语句只有一条的时候{}可以省略；


【第三章】

【第1节】（循环）

【039――输出无限次数"hi"】

#include <stdio.h>	
#include<windows.h>
int main()
{
	system("color 0a");//黑底蓝字
	while(1)	printf(" hi");	
	Sleep(2000);
	return 0;
}

【第2节】（固定次数循环）

【040――输出固定次数"hi"】

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a=0;
	system("color 0a");
	while(a<100)	{printf(" hi");a=a+1;}	
	Sleep(2000);
	return 0;
}

【041――输出1~100】

#include <stdio.h>	
#include<windows.h>
int main()
{
	int a=1;
	system("color 0a");
	while(a<=100)	{printf(" %d",a);a=a+1;}	
	Sleep(2000);
	return 0;
}

【042――练习输出1~100~1】

#include <stdio.h>	
int main()
{
	int a = 1, b = 200;
	system("color 0a");
	while (a < 100) { printf(" %d ", a); a = a + 1; }
	while (b > 100) { printf(" %d ", a); a = a - 1; b = b - 1; }
	getchar();
	return 0;
}

【第3节】（if与while）

【042――输出1~100除去3的倍数以外的数】

#include <stdio.h>	
int main()
{
	int a = 1;
	system("color 0a");
	while (a <=100)
	{
		if (a % 3 != 0)	//"%";mod，取模，获取余数，左右两边必须为整数
		printf(" %d", a);
		a = a + 1;
	}
	getchar();
	return 0;
}

【043――输出1~100内含有3的倍数，但没有5的倍数的数】

#include <stdio.h>	
int main()
{
	int a = 1;
	system("color 0a");
	while (a <=100)
	{
		if (a % 3 == 0 && a%5!=0)
		printf(" %d", a);
		a = a + 1;
	}
	getchar();
	return 0;
}

【044――击鼓传花，逢7的倍数或末位数为7的数】

#include <stdio.h>	
int main()
{
	int a = 1;
	system("color 0a");
	while (a <=100)
	{
		if (a%10==7||a%7==0)
		printf(" *")；
		else	printf(" %d", a);
		a = a + 1;
	}
	getchar();
	return 0;
}


【第4节】（求和）

【045――求和1+2+3】

mission A:

#include <stdio.h>	
int main()
{
	int a;
	a = 1+2+3;
	printf("%d,a");
	getchar();
	return 0;
}


mission B:

#include <stdio.h>	
int main()
{
	int a;
	a =0;//为什么a=0?
	a=a+1;
	a=a+2;
	a=a+3;
	printf("%d,a");
	getchar();
	return 0;
}

mission C:

#include <stdio.h>	
int main()
{
	int a,b;
	a=0;
	b=1;
	while(b<=3)
	{
		a=a+b;
		b=b+1;
	}
	printf("%d",a);	
	getchar();
	return 0;
}

【046――求0~100以内所有带7或者7的倍数的和】

#include <stdio.h>	
int main()
{
	int a,b;
	a=0;
	b=1;
	while(b<=100)
	{
		if(b%10==7||b%7==0){a=a+b;}
		b=b+1;
	}
	printf("%d",a);
	
	getchar();
	return 0;
}

【047――求1~10的乘积】

#include <stdio.h>	
int main()
{
	int a,b;
	a=1;
	b=1;
	while(b<=10)
	{
		a=a*b;
		b=b+1;
	}
	printf("%d",a);	
	getchar();
	return 0;
}

【048――练习】

练习1：求1~100之间所有偶数的和

#include <stdio.h>	
int main()
{
	int a,b;
	a=0;
	b=1;
	while(b<=100)
	{
		if(b%2==0){a=a+b;}
		b=b+1;
	}
	printf("%d",a);	
	getchar();
	return 0;
}

练习2：输入整数n（1<=n<=9）,求n的阶乘

#include <stdio.h>	
#include <windows.h>
int main()
{
	int a, b,n;
	a = 1;
	b = 1;
	scanf_s("%d", &n);
	while (b <= n)
	{
		a = a * b;
		b = b + 1;
	}
	printf("%d", a);
	Sleep(3000);
	return 0;
}

【第5节】（计时）

【049――3秒倒计时】

mission A:

#include <stdio.h>	
#include <windows.h>
int main()
{
	system("cls");//清屏
	printf("3");
	Sleep(1000);

	system("cls");
	printf("2");
	Sleep(1000);

	system("cls");
	printf("1");
	Sleep(1000);

	system("cls");
	printf("1");
	Sleep(1000);

	return 0;
}

mission B:

#include <stdio.h>	
#include <windows.h>
int main()
{
	int a;
	a=3;
	while(a>=0)
	{
		system("cls");
		printf("%d",a);		
		Sleep(1000);
		a=a-1;
	}
	return 0;
}

【050――60秒倒计时】

#include <stdio.h>	
#include <windows.h>
int main()
{
	int a;
	a=60;
	system("color 0a");
	while(a>=0)
	{
		system("cls");
		printf("%d",a);		
		Sleep(1000);
		a=a-1;
	}
	Sleep(5000);
	return 0;
}

【051――练习：编制一个2分钟倒计时器类似 02:00】


#include <stdio.h>	
#include <windows.h>
int main()
{
	int a, b, c;
	a = 120;
	b = 2;
	system("color 0a");
	while (a >= 0)
	{
		system("cls");
		c = a % 60;
		a = a - 1;
		if (a >= 0 && a < 10) { b = 0; printf("0%d:0%d", b, a); }
		if (a >= 10 && a < 60) { b = 0; printf("0%d:%d", b, a); }
		if (a >= 60 && a < 69) { b = 1; printf("0%d:0%d", b, c); }
		if (a >= 69 && a < 119) { b = 1; printf("0%d:%d", b, c); }
		if (a >=119 && a < 130) { b = 2; printf("0%d:0%d", b, c); }
		Sleep(1000);
	}
	Sleep(2000);
	return 0;
}

*【改进】

思路：顺时/ 1小时计时器

#include <stdio.h>	
#include<windows.h>
int main()
{
	system("color 0a");
	int a, b, c, d;
	a = 0;
	b = 0;
	c = 0;
	d = 0;
	while(1)
	{
		d = d + 1;
		if (d > 9) { d = 0, c = c + 1; }
		if (c > 5) { c = 0, b = b + 1; }
		if (b > 9) { b = 0, a = a + 1; }
		if (a > 5) { a = 0, b = 0, c = 0, d = 0; }
		printf("%d%d:%d%d", a, b, c, d);
		Sleep(1000);
		system("cls");
	}	
	Sleep(5000);
	return(0);
}

拓展1 天数计时器：
【X天X小时XX分XX秒】

#include <stdio.h>	
#include<windows.h>
int main()
{
	system("color 0a");
	int a, b, c, d,t,h;
	a = 0;
	b = 0;
	c = 0;
	d = 0;
	t = 0;
	h = 0;
	while(1)
	{
		d = d + 1;
		if (d > 9) { d = 0, c = c + 1; }
		if (c > 5) { c = 0, b = b + 1; }
		if (b > 9) { b = 0, a = a + 1; }
		if (a > 5) { a = 0, h = h + 1; }
		if (h > 23) { h = 0, t = t + 1; }
		if (h == 0 && t == 0) { printf("%d%d:%d%d", a, b, c, d); }
		if (h >0&&t==0) { printf("%d:%d%d:%d%d", h, a, b, c, d); }
		if (t >0) { printf("%d:%d:%d%d:%d%d",t, h, a, b, c, d); }		
		Sleep(1000);
		system("cls");
	}	
	Sleep(5000);
	return(0);
}


2分钟倒计时器

#include <stdio.h>	
#include<windows.h>
int main()
{
	system("color 0a");
	int a, b, c;
	a = 1;
	b = 0;
	c = 2;
	while(c>=0)
	{
		a = a - 1;
		if (a < 0) { a = 9, b = b - 1; }
		if (b < 0) { b = 5, c = c - 1; }
		if (a >= 0 && b >= 0 && c >= 0)	{printf("0%d:%d%d", c, b, a);}
		Sleep(100);
		system("cls");
	}	
	Sleep(5000);
	return(0);
}






【第6节】（嵌套循环）

【052――尝试输出图形】

	*****
	*****
	*****

mission A:

#include <stdio.h>	
int main()
{
	printf("*****\n*****\n*****");//直接输出；无法批量操作
	getchar();
	return 0;
}

mission B:

#include <stdio.h>	
int main()
{
	int a=1;
	while (a <= 15)//while循环变量a输出*
	{
		printf("*");
		if (a % 5 == 0)	printf("\n");//if实现换行
		a = a + 1;
	}
	getchar();
	return 0;
}

mission C:

#include <stdio.h>	
int main()
{
	int a = 1, b;//若b在此处赋值，a=1循环后，a=2;b=6后续无法继续执行b的嵌套循环
	while (a <= 3)
	{		
		b = 1;//将b=1在此赋值的意义：初始化b；
		while (b <= 5)//嵌套循环b
		{
			printf("*");
			b = b + 1;
		}
		printf("\n");
		a = a + 1;
	}
	getchar();
	return 0;
}


【053――尝试输出图形】

*
**
***
****
*****


#include <stdio.h>	
int main()
{
	int a = 1, b;
	while (a <= 5)
	{
		b = 1;
		while (b <= a)
		{
			printf("*");
			b = b + 1;
		}
		printf("\n");
		a = a + 1;
	}
	getchar();
	return 0;
}


【054――练习：尝试输出图形】

1
22
333
4444
55555

#include <stdio.h>	
int main()
{
	int a, b;
	a = 1;
	while (a < =5)
	{
		b = 1;
		while (b <= a)
		{
			printf("%d", a);
			b = b + 1;
		}
		printf("\n");
		a = a + 1;
	}
	getchar();
	return 0;
}

【055――练习：尝试输出图形】

 1
 2   3
 4   5   6
 7   8   9  10
11  12  13  14  15

尝试过程：

mission A：用一个变量a实现分行功能"\n"；

#include <stdio.h>	
int main()
{
	int a;
	a=1;
	while(a<=5)
	{	
		printf("\n");
		a=a+1;
	}
	getchar();
	return 0;
}


mission B：通过053学习；嵌套一个b循环；变量b重置后可控制每行数有几项；

#include <stdio.h>	
int main()
{
	int a, b;
	a = 1;
	while (a <= 5)
	{
		b = 1;			//重置变量b；
		while (b <= a)		//控制变量数；
		{
			printf("*");	//输出语句；
			b = b + 1;
		}
		printf("\n");
		a = a + 1;
	}
	getchar();
	return 0;
}

//若输出printf("*");

*	(a=1;b=1;	b<=a成立;输出*;b=b+1=2;b<=a不成立; 换行;a=a+1=2)
**	(a=2;b重置;b=1;b<=a成立;输出*;b=b+1=2;b<=a成立; 输出*;b=b+1=3;b<=a不成立;换行;a=a+1=3)
***	(...)
****	(...)
*****	(...)

//若输出printf("%d",a);

1	(a=1;b=1;	b<=a成立;输出a=1;b=b+1=2;b<=a不成立; 换行;a=a+1=2)
22	(a=2;b重置;b=1;b<=a成立;输出a=2;b=b+1=2;b<=a成立; 输出a=2;b=b+1=3;b<=a不成立;换行;a=a+1=3)
333	(...)
4444	(...)
55555	(...)

//若输出printf("%d",b);

1	(a=1;b=1;	b<=a成立;输出b=1;b=b+1=2;b<=a不成立; 换行;a=a+1=2)
12	(a=2;b重置;b=1;b<=a成立;输出b=1;b=b+1=2;b<=a成立; 输出b=2;b=b+1=3;b<=a不成立;换行;a=a+1=3)
123	(...)
1234	(...)
12345	(...)

//观察printf("%d",b);  "%d"的变量b若是没有被重置，可以达到题目要求：

 1
 2   3
 4   5   6
 7   8   9  10
11  12  13  14  15

//重新引进一个变量c来来赋予值"%d"，避开b的重置部分即可实现：

#include <stdio.h>	
int main()
{
	int a, b, c;//a控制换行；b控制项数；c控制每项值；
	a = 1, c = 1;
	while (a <= 5)
	{
		b = 1;
		while (b <= a)
		{
			printf(" %d", c);
			b = b + 1;
			c = c + 1;
		}
		printf("\n");
		a = a + 1;
	}
	getchar();
	return 0;
}

【改进】
#include <stdio.h>	
#include<windows.h>
int main()
{
	system("color 0a");
	int a, b,c;
	a = 1;
	c = 1;
	while (a <= 5)
	{
		b = 0;
		while (b < a)
		{
			printf("%d ", c);
			b = b + 1;
			c = c + 1;
		}
		printf("\n");
		a = a + 1;
	}		
	Sleep(5000);
	return(0);
}







【第7节】（奔跑的字母）

【056――移动显示字母H】

#include <stdio.h>
#include <windows.h>		
int main()
{
	int a, b;
	a = 0;
	while (a <= 2)
	{
		system("cls");
		b = 1;
		while (b <= a)
		{
			printf(" ");
			b = b + 1;
		}
		printf("H");
		Sleep(100);
		a = a + 1;
	}
	getchar();
	return 0;
}

【改进】

#include <stdio.h>	
#include<windows.h>
int main()
{
	system("color 0a");
	int a, b;
	a = 0;
	while (a <= 3) //3为插入空格数
	{
		b = 1;
		while (b <= a)
		 { 
			printf(" "); 
			b = b + 1; 
		}
		printf("H");
		a = a + 1;
		Sleep(1000);
		system("cls");
	}
	Sleep(5000);
	return(0);
}


【第8节】（嵌套循环次数）

【057――数下列代码循环了几次】

mission A:

#include <stdio.h>
int main()
{
	int a, b;
	a = 1;
	while (a <= 2)
	{
		b = 1;
		while (b <= 3)
		{
			printf(" ok");
			b = b + 1;
		}
		a = a + 1;
	}
	getchar();
	return 0;
}
//3*2=6

mission B:

#include <stdio.h>
int main()
{
	int a, b;
	a = 1;
	while (a <= 4)
	{
		b = 1;
		while (b <= 2)
		{
			printf(" ok");
			b = b + 1;
		}
		a = a + 1;
	}
	getchar();
	return 0;
}
//2*4=8

mission C:

#include <stdio.h>
int main()
{
	int a, b,c;
	a = 1;
	while (a <= 2)
	{
		b = 1;
		while (b <= 4)
		{
			c=1;
			while(c<=3)
			{
			printf(" ok");
			c=c+1;	
			}
			b = b + 1;
		}
		a = a + 1;
	}
	getchar();
	return 0;
}
//3*4*2=24

mission D:

#include <stdio.h>
int main()
{
	int a, b;
	a = 1;
	while (a <=10)
	{
		b = 1;
		while (b <= a)
		{
			printf(" ok");
			b++;	
		}
		a++;
	}
	getchar();
	return 0;
}
//1+2+3+4+5+6+7+8+9+10=55


【第9节】（奔跑的小人）

【058――让下面小人从左往右移动显示】

  O  
<H>
 I   I

#include <stdio.h>
int main()
{
	printf(" O \n");
	printf("<H>\n");
	printf("I  I\n");	
	getchar();
	return 0;
}

//由056奔跑的字母代码中将printf(" O\n");	printf("<H>\n");printf(" I  I\n");分别代入printf("H");

#include <stdio.h>
#include <windows.h>
int main()
{
	int a, b;
	a = 0;
	while (a <=100)//范围限制在一行调试栏里面，换行后原形状被破坏
	{
		system("cls");

		b = 1;
		while (b <= a)
		{
			printf(" ");
			b = b + 1;
		}
		printf(" O\n");

		b = 1;
		while (b <= a)
		{
			printf(" ");
			b = b + 1;
		}
		printf("<H>\n");

		b = 1;
		while (b <= a)
		{
			printf(" ");
			b = b + 1;
		}
		printf("I I\n");
		Sleep(100);
		a = a + 1;
	}
	getchar();
	return 0;
}

【059――练习：让图像从右往左移动显示】

mission A：先尝试一个字母H从右往左移动显示；

#include <stdio.h>
#include <windows.h>		
int main()
{
	int a, b;
	a = 4;//步数；
	while (a >= 0)
	{
		system("cls");
		b = a - 1;
		while (b <= a && b >= 0)
		{
			printf(" ");
			b--;
		}
		printf("H");
		Sleep(100);
		a--;
	}
	getchar();
	return 0;
}

//将代码printf(" O\n");	printf("<H>\n");printf(" I  I\n");代入printf("H");

#include <stdio.h>
#include <windows.h>		
int main()
{
	int a, b;
	a = 100;//范围不超出调试界面一行宽度；
	while (a >= 0)
	{
		system("cls");

		b = a - 1;
		while (b <= a && b >= 0)
		{
			printf(" ");
			b--;
		}
		printf(" O\n");

		b = a - 1;
		while (b <= a && b >= 0)
		{
			printf(" ");
			b--;
		}
		printf("<H>\n");

		b = a - 1;
		while (b <= a && b >= 0)
		{
			printf(" ");
			b--;
		}
		printf("I I\n");

		Sleep(100);
		a--;
	}
	getchar();
	return 0;
}

【第10节】（for循环）

【060――输出1~10】

mission A：while循环：

#include <stdio.h>
int main()
{
	int a;
	a=1;
	while(a<=10)
	{
		printf("%d",a);
		a=a+1;
	}
	getchar();
	return 0;
}

mission B：for循环；

#include <stdio.h>
int main()
{
	int a;
	for(a=1;a<=10;a++)
	{
		printf("%d",a);
	}
	getchar();
	return 0;
}

【061――求和1~100】

#include <stdio.h>
int main()
{
	int a,sum;
	sum=0;
	for(a=1;a<=100;a++)
	{
		sum=sum+a;
	}
	printf("%d",sum);
	getchar();
	return 0;
}

//题外：等差数列求和计算器(a1=1;d=1)

#include <stdio.h>
#include<windows.h>
int main()
{
	int a, b, sum;
	sum = 0;
	scanf_s("%d", &b);
	for (a = 1; a <= b; a++)
	{
		sum = sum + a;
	}
	printf("%d", sum);
	Sleep(5000);
	return 0;
}


【062――求1~100所有偶数和】

#include <stdio.h>
int main()
{
	int a,sum;
	sum=0;
	for(a=2;a<=100;a=a+2)
	{
		sum=sum+a;
	}
	printf("%d",sum);
	getchar();
	return 0;
}

【063――输出1~100所有7的倍数或者末尾含7的数】

#include <stdio.h>
int main()
{
	int a;
	for(a=1;a<=100;a++)
	{
		if(a%10==7||a%7==0)
			printf("%d",a);
	}
	getchar();
	return 0;
}

【064――求1~10的乘积】

#include <stdio.h>
int main()
{
	int a,b;
	b=1;
	for(a=1;a<=10;a++)
	{
		b=b*a;
	}
	printf("%d",b);
	getchar();
	return 0;
}

【065――练习：用for循环打印下面图形】

    *    
   ***   
  *****  
 ******* 
*********
 ******* 
  *****  
   ***   
    *    

解题过程：

1.先尝试输出上半部分：
    *    
   ***   
  *****  
 ******* 
*********

1.1引用三个变量；a,b,c;
分析图形构成：

第几行	*符号数;	空格数;
a=1;	b=1;	c=4;
a=2;	b=3;	c=3;
a=3;	b=5;	c=2;
a=4;	b=7;	c=1;
a=5;	b=9;	c=0;

发现规律:
a=a+1;
b=b+2;
c=c-1;

1.2分行：

#include <stdio.h>
int main()
{
	int a, b, c;
	for (b=1;b<=10;b=b+2)
	{
		printf("\n");
	}
	getchar();
	return 0;
}

1.3尝试输出*符；
*
***
*****
*******
*********

#include <stdio.h>
int main()
{
	int a, b, c;
	for (b = 1; b <= 10; b = b + 2)
	{
		for (a = 1; a <= b; a = a + 1)
		{
			printf("*");
		}
		printf("\n");
	}
	getchar();
	return 0;
}

1.4输出空格符

%%%%
%%%
%%
%























